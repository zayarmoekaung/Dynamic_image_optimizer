{
  "openapi": "3.0.3",
  "info": {
    "title": "Image Optimization API",
    "version": "1.0.0",
    "description": "API for fetching, optimizing, and serving images based on device type and client parameters, with a health check endpoint."
  },
  "servers": [
    {
      "url": "https://dynamic-image-optimizer.onrender.com"
    }
  ],
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type description"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message"
          },
          "type": {
            "type": "string",
            "description": "Name of the exception class"
          }
        },
        "required": ["error", "message", "type"]
      }
    }
  },
  "paths": {
    "/optimize": {
      "get": {
        "summary": "Optimize and serve an image",
        "description": "Fetches an external image, optimizes it based on device type, client dimensions, DPR, and format, and returns it. Uses caching for performance. Supports WebP (default), JPEG, PNG, BMP, TIFF, and GIF.",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "URL of the image to optimize (http:// or https://)"
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Client viewport width (px)"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Client viewport height (px)"
          },
          {
            "name": "dpr",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 1,
              "default": 1.0
            },
            "description": "Device Pixel Ratio"
          }
        ],
        "requestBody": {
          "content": {
            "image/webp": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/bmp": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/tiff": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/gif": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Optimized image",
            "content": {
              "image/webp": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/bmp": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/tiff": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (invalid parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Bad request",
                  "message": "Missing 'url' query parameter",
                  "type": "HTTPError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unauthorized",
                  "message": "Authentication required",
                  "type": "HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Forbidden",
                  "message": "Access denied",
                  "type": "HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Invalid URL or resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Invalid url",
                  "message": "404 Not Found",
                  "type": "HTTPError"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Method not allowed",
                  "message": "Method POST not allowed for this endpoint",
                  "type": "HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unprocessable entity",
                  "message": "Invalid data format",
                  "type": "HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error (fetch or optimization failed)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Internal server error",
                  "message": "Failed to fetch image: HTTPSConnectionPool(host='example.com', port=443): Max retries exceeded",
                  "type": "RequestException"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Check API health",
        "description": "Returns the health status of the API, verifying cache directory accessibility.",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["healthy"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (invalid parameters, unlikely for this endpoint)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Bad request",
                  "message": "Invalid request parameters",
                  "type": "HTTPError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unauthorized",
                  "message": "Authentication required",
                  "type": "HTTPError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Forbidden",
                  "message": "Access denied",
                  "type": "HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Invalid url",
                  "message": "404 Not Found",
                  "type": "HTTPError"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Method not allowed",
                  "message": "Method POST not allowed for this endpoint",
                  "type": "HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unprocessable entity",
                  "message": "Invalid data format",
                  "type": "HTTPError"
                }
              }
            }
          },
          "500": {
            "description": "API is unhealthy (e.g., cache directory not writable)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Internal server error",
                  "message": "[Errno 13] Permission denied: '/data/cache/health_check.test'",
                  "type": "OSError"
                }
              }
            }
          }
        }
      }
    }
  }
}